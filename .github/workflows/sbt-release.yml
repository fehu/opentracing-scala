name: SBT / Scala - Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release'
        required: false
        type: string
      next_version:
        description: 'Next development version'
        required: false
        type: string
      target:
        description: 'Publish target'
        required: true
        type: choice
        default: 'Staging'
        options:
          - 'Release'
          - 'Promote'
          - 'Staging'
          - 'Local Test'
      module:
        description: 'Run for single sbt sub-project'
        required: false
        type: choice
        default: '<none>'
        options:
          - <none>
          - core
          - akka
          - fs2
          - noop
          - jaeger
          - compiler-plugin
      step:
        description: 'Run single release step'
        required: false
        type: choice
        default: '<none>'
        options:
          - <none>
          - check
          - test
          - pre-release
          - release
          - post-release
          - push

permissions:
  contents: write

jobs:
  release:
    if: ${{ inputs.step == '<none>' }}
    name: Release ${{ inputs.module == '<none>' && 'all' || inputs.module }} - ${{ inputs.target }}
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    # - uses: git-actions/set-user@v1.0.0
    - uses: crazy-max/ghaction-import-gpg@v5.0.0
      with:
        gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
        passphrase: ${{ secrets.GPG_PASSPHRASE }}
        git_committer_name: "[bot] CI - SBT / Scala - Release"
        git_committer_email: "kdn.kovalev@gmail.com"
        git_commit_gpgsign: true
        git_tag_gpgsign: true
        git_push_gpgsign: true
    - uses: coursier/cache-action@v6.3
    - uses: VirtusLab/scala-cli-setup@main
      with:
        jvm: adopt:11
    - name: Check
      run: ./scripts/sbt-release.sh check "${{ inputs.module }}"
    - name: Test
      run: ./scripts/sbt-release.sh test "${{ inputs.module }}"
    - name: Pre Release
      run: ./scripts/sbt-release.sh preRelease "${{ inputs.module }}" "${{ inputs.version }}"
    - name: Release
      env:
        SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
        SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
      run: ./scripts/sbt-release.sh release "${{ inputs.module }}" "${{ inputs.target }}"
    - name: Post Release
      run: ./scripts/sbt-release.sh postRelease "${{ inputs.module }}" "${{ inputs.next_version }}"
    - name: Push
#      env:
#        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: ./scripts/sbt-release.sh push "${{ inputs.module }}"

  releaseStep:
    if: ${{ inputs.step != '<none>' }}
    name: Release ${{ inputs.module == '<none>' && 'all' || inputs.module }} - Step '${{ inputs.step }}'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      # - uses: git-actions/set-user@v1.0.0
      - uses: crazy-max/ghaction-import-gpg@v5.0.0
        with:
          gpg_private_key: ${{ secrets.GPG_PRIVATE_KEY }}
          passphrase: ${{ secrets.GPG_PASSPHRASE }}
          git_committer_name: "[bot] CI - SBT / Scala - Release"
          git_committer_email: "kdn.kovalev@gmail.com"
          git_commit_gpgsign: true
          git_tag_gpgsign: true
          git_push_gpgsign: true
      - uses: coursier/cache-action@v6.3
      - uses: VirtusLab/scala-cli-setup@main
        with:
          jvm: adopt:11
      - name: ${{ inputs.step }}
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: |
          ./scripts/sbt-release.sh step \
            "${{ inputs.step }}" \
            "${{ inputs.module }}" \
            "${{ inputs.version }}" \
            "${{ inputs.next_version }}" \
             ${{ inputs.target }}
