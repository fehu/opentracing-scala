name: SBT / Scala - Release Pipe

on:
  workflow_dispatch:
    inputs:
      set_release_version:
        description: 'Set release version'
        required: true
        type: boolean
        default: true
      override_version:
        description: '(Override)'
        required: false
        type: string
      set_tag:
        description: 'Tag'
        required: true
        type: boolean
        default: true

      set_next_version:
        description: 'Set next development version'
        required: true
        type: boolean
        default: true
      override_next_version:
        description: '(Override)'
        required: false
        type: string

      publish_sonatype:
        description: 'Publish to Sonatype'
        required: false
        type: choice
        default: 'Staging'
        options:
          - 'Release'
          - 'Promote to Release'
          - 'Staging'
          - 'Snapshot'

      publish_release:
        description: 'Publish on Github'
        required: true
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  set_release_version:
    name: 'Set release version'
    if: ${{ inputs.set_release }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'sbt'
      - uses: git-actions/set-user@v1.0.0
      - name: 'Set release version'
        run: sbt set-release ${{ inputs.set_tag }} ${{ inputs.override_version }}

  package_signed:
    name: 'Package and sign artifacts'
    needs:
      - set_release_version
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
#      - uses: actions/cache@v3
#        with:
#          path: |
#            ~/.ivy2/cache
#            ~/.sbt
#          key: ${{ runner.os }}-sbt-${{ hashFiles('**/build.sbt') }}
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'sbt'
          gpg-private-key: ${{ secrets.GPG_PRIVATE_KEY }}
          gpg-passphrase: ${{ secrets.GPG_PASSPHRASE }}
      - name: 'Package and sign artifacts'
        run: sbt package-signed
     - name: 'Archive artifacts'
       uses: actions/upload-artifact@v3
       with:
         name: staging-bundle
         path: ~/work/opentracing-scala/opentracing-scala/target/staging-bundle/
     - id: out_tag
       run: echo "::set-output name=tag::$(cat ~/work/opentracing-scala/opentracing-scala/target/staging-version.txt)"
    outputs:
      tag: ${{ steps.out_tag.outputs.tag }}

  set_next_version:
    name: 'Set next development version'
    if: ${{ inputs.set_next_version }}
    needs: package_signed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-java@v3
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'sbt'
      - uses: git-actions/set-user@v1.0.0
      - name: 'Set next development version'
        run: sbt set-devel ${{ inputs.override_next_version }}

  publish_sonatype:
    name: 'Publish to Sonatype - ${{ inputs.target }}'
    if: ${{ inputs.publish_sonatype }}
    needs: package_signed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3.0.0
        with:
          name: staging-bundle
      - name: 'Publish to Sonatype - ${{ inputs.target }}'
        env:
          SONATYPE_USER: ${{ secrets.SONATYPE_USER }}
          SONATYPE_PASSWORD: ${{ secrets.SONATYPE_PASSWORD }}
        run: sbt publish-sonatype ${{ inputs.target }}

  publish_release:
    name: 'Publish on Github'
    if: ${{ inputs.publish_release }}
    needs: package_signed
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v3.0.0
        with:
          name: staging-bundle
      - name: 'Publish on Github'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        uses: Hs1r1us/Release-AIO@v1.0
        with:
          tag_name: ${{ package_signed.outputs.tag }}
          asset_files: ~/work/opentracing-scala/opentracing-scala/target/staging-bundle/
          draft: true
